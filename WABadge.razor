@inherits WAComponentBase
<wa-badge @ref="@Element"
          id="@Id"
          @attributes="@AdditionalAttributes" 
          variant="@VariantString"
          appearance="@AppearanceString"
          pill="@Pill"
          pulse="@Pulse"
          style="@StyleNames"
          class="@ClassNames"
          slot="@Slot">
    @Text
</wa-badge>

@code {
    /// <summary>
    /// The text to display in the badge.
    /// </summary>
    [Parameter]
    public string? Text { get; set; }

    /// <summary>
    /// The badge's theme variant. Defaults to brand if not within another element with a variant.
    /// </summary>
    [Parameter]
    public Enums.Variant Variant { get; set; } = Enums.Variant.Brand;
    string VariantString
    {
        get
        {
            return Variant switch
            {
                Enums.Variant.Brand => "brand",
                Enums.Variant.Success => "success",
                Enums.Variant.Neutral => "neutral",
                Enums.Variant.Warning => "warning",
                Enums.Variant.Danger => "danger",
                _ => "brand"
            };
        }
    }
    /// <summary>
    /// The badge's visual appearance. Valid options for badge are: Accent, AccentOutlined, Filled, FilledOutlined, Outlined.
    /// </summary>
    [Parameter]
    public Enums.Appearance Appearance { get; set; } = Enums.Appearance.Accent;
    string AppearanceString
    {
        get
        {
            return Appearance switch
            {
                Enums.Appearance.Accent => "accent",
                Enums.Appearance.AccentOutlined => "accent outlined",
                Enums.Appearance.Filled => "filled",
                Enums.Appearance.FilledOutlined => "filled outlined",
                Enums.Appearance.Outlined => "outlined",
                _ => "accent"
                //Plain is not valid for badge
            };
        }
    }

    /// <summary>
    /// Draws a pill-style badge with rounded edges.
    /// </summary>
    [Parameter]
    public bool Pill { get; set; } = false;
    /// <summary>
    /// Makes the badge pulsate to draw attention.
    /// </summary>
    [Parameter]
    public bool Pulse { get; set; } = false;
}
