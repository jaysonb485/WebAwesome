@inherits WAComponentBase
@typeparam TValue
<wa-option @ref="@Element"
           id="@Id"
           @attributes="@AdditionalAttributes"
           style="@StyleNames"
           class="@ClassNames"
           slot="@Slot"
           value="@Value"
           selected="@Selected">
    @if (!String.IsNullOrEmpty(StartIconName))
    {
        <wa-icon name="@StartIconName" variant="@StartIconVariant" family="@StartIconFamily" slot="start"></wa-icon>
    }
    @if (!String.IsNullOrEmpty(EndIconName))
    {
        <wa-icon name="@EndIconName" variant="@EndIconVariant" family="@EndIconFamily" slot="end"></wa-icon>
    }
    @Label
    @ChildContent
</wa-option>

@code {
    /// <summary>
    /// The option's value. When selected, the radio group will receive this value.
    /// </summary>
    [Parameter]
    public TValue? Value { get; set; }

    /// <summary>
    /// The option's label
    /// </summary>
    [Parameter]
    public string? Label { get; set; }
    /// <summary>
    /// Disables the option
    /// </summary>
    [Parameter]
    public bool Disabled { get; set; } = false;

    /// <summary>
    /// The option's hint text.
    /// </summary>
    [Parameter]
    public string? Hint { get; set; }

    /// <summary>
    ///
    /// </summary>
    [Parameter]
    public bool Selected { get; set; } = false;

    /// <summary>
    /// The name of the icon to draw in the start slot. Available names depend on the icon library being used.
    /// </summary>
    [Parameter]
    public string? StartIconName { get; set; }
    /// <summary>
    /// The family of icons to choose from for the start slot icon. For Font Awesome Free (default), valid options include classic and brands. For Font Awesome Pro subscribers, valid options include, classic, sharp, duotone, and brands. Custom icon libraries may or may not use this property.
    /// </summary>
    [Parameter]
    public string? StartIconFamily { get; set; }
    /// <summary>
    /// The name of the start slot icon's variant. For Font Awesome, valid options include thin, light, regular, and solid for the classic and sharp families. Some variants require a Font Awesome Pro subscription. Custom icon libraries may or may not use this property.
    /// </summary>
    [Parameter]
    public string? StartIconVariant { get; set; }
    /// <summary>
    /// The name of the icon to draw in the end slot. Available names depend on the icon library being used.
    /// </summary>
    [Parameter]
    public string? EndIconName { get; set; }
    /// <summary>
    /// The family of icons to choose from for the end slot. For Font Awesome Free (default), valid options include classic and brands. For Font Awesome Pro subscribers, valid options include, classic, sharp, duotone, and brands. Custom icon libraries may or may not use this property.
    /// </summary>
    [Parameter]
    public string? EndIconFamily { get; set; }
    /// <summary>
    /// The name of the end slot icon's variant. For Font Awesome, valid options include thin, light, regular, and solid for the classic and sharp families. Some variants require a Font Awesome Pro subscription. Custom icon libraries may or may not use this property.
    /// </summary>
    [Parameter]
    public string? EndIconVariant { get; set; }
}
