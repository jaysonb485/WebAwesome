@inherits WAComponentBase
<wa-card @ref="@Element"
         id="@Id"
         @attributes="@AdditionalAttributes"
         appearance="@AppearanceString"
         style="@StyleNames"
         class="@ClassNames"
         slot="@Slot"
         orientation="@_orientationString">
    @if (CardMedia != null)
    {
        <div slot="media">
            @CardMedia
        </div>
    }
    @if (Orientation == Enums.Orientation.Vertical)
    {
        @if (CardHeader != null)
        {
            <div slot="header" class="@HeaderCSSClass">
                @CardHeader
            </div>
        }
        @if (CardFooter != null)
        {
            <div slot="footer" class="@FooterCSSClass">
                @CardFooter
            </div>
        }
    }
    @if (Orientation == Enums.Orientation.Horizontal && HorizontalActions != null)
    {
        <div slot="actions">
            @HorizontalActions
        </div>
    }
    @ChildContent
</wa-card>

@code {
    
    [Parameter]
    public RenderFragment? CardFooter { get; set; }

    [Parameter]
    public RenderFragment? CardMedia { get; set; }

    [Parameter]
    public string? FooterCSSClass { get; set; }

    [Parameter]
    public RenderFragment? CardHeader { get; set; }

    [Parameter]
    public RenderFragment? HorizontalActions { get; set; }

    [Parameter]
    public string? HeaderCSSClass { get; set; }

    /// <summary>
    /// The card's visual appearance.
    /// </summary>
    [Parameter]
    public Enums.Appearance Appearance { get; set; } = Enums.Appearance.Outlined;
    string AppearanceString
    {
        get
        {
            return Appearance switch
            {
                Enums.Appearance.Accent => "accent",
                Enums.Appearance.AccentOutlined => "accent outlined",
                Enums.Appearance.Filled => "filled",
                Enums.Appearance.FilledOutlined => "filled outlined",
                Enums.Appearance.Outlined => "outlined",
                Enums.Appearance.Plain => "plain",
                _ => "outlined"
            };
        }
    }

    /// <summary>
    /// An optional image to render at the start of the card.
    /// </summary>
    [Parameter]
    public string? ImageSource { get; set; }
    /// <summary>
    /// Alt text for the optional image.
    /// </summary>
    [Parameter]
    public string? ImageAltText { get; set; }

    [Parameter]
    public Enums.Orientation Orientation { get; set; } = Enums.Orientation.Vertical;

    string _orientationString
    {
        get
        {
            return Orientation switch
            {
                Enums.Orientation.Horizontal => "horizontal",
                Enums.Orientation.Vertical => "vertical",
                _ => "vertical"
            };
        }
    }
}
